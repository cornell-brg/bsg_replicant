# Copyright (c) 2019, University of Washington All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# Redistributions of source code must retain the above copyright notice, this list
# of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright notice, this
# list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
#
# Neither the name of the copyright holder nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

###########################################################################################
# TIMING_V0_32_16: this is a 32x16 array with v-caches on top and bottom (a “32x16 pod”). #
# Each group of 16 v-caches is mapped to one channel.                                     #
# Each v-cache is mapped to a separate HBM bank.                                          #
# There are four HBM channels.                                                            #
###########################################################################################

# Specific to the HBM chip we're modeling
__BSG_MACHINE_DRAMSIM3_CHIP_SIZE_IN_WORDS := $(shell echo 2^30 | bc) # 4GB
__BSG_MACHINE_DRAMSIM3_CHIP_CH_SIZE_IN_WORDS := $(shell echo $(__BSG_MACHINE_DRAMSIM3_CHIP_SIZE_IN_WORDS)/8 | bc)

BSG_MACHINE_GLOBAL_X                  = 32
BSG_MACHINE_GLOBAL_Y                  = 17
BSG_MACHINE_VCACHE_SET                = 64
BSG_MACHINE_VCACHE_WAY                = 8
BSG_MACHINE_VCACHE_BLOCK_SIZE_WORDS   = 8
BSG_MACHINE_VCACHE_STRIPE_SIZE_WORDS  = $(BSG_MACHINE_VCACHE_BLOCK_SIZE_WORDS)
BSG_MACHINE_VCACHE_DMA_DATA_WIDTH     = 32
BSG_MACHINE_VCACHE_MISS_FIFO_ELS      = 32
BSG_MACHINE_DRAM_INCLUDED             = 1
BSG_MACHINE_MAX_EPA_WIDTH             = 28
BSG_MACHINE_DRAM_CHANNELS             = 4

# IO flow control parameters.
# max host loads; max host request credits; max out credits of manycore endpoint standard module
BSG_MACHINE_IO_REMOTE_LOAD_CAP        = 32
BSG_MACHINE_IO_HOST_CREDITS_CAP       = 256
BSG_MACHINE_IO_EP_MAX_OUT_CREDITS     = 16
BSG_MACHINE_DRAM_SIZE_WORDS           := $(shell echo $(__BSG_MACHINE_DRAMSIM3_CHIP_CH_SIZE_IN_WORDS)*$(BSG_MACHINE_DRAM_CHANNELS) | bc)
BSG_MACHINE_DRAM_BANK_SIZE_WORDS      := $(shell echo $(BSG_MACHINE_DRAM_SIZE_WORDS)/$(BSG_MACHINE_GLOBAL_X)/2 | bc)
BSG_MACHINE_DATA_WIDTH                = 32

# This flag has to be always 0 by default. Conditional
# assignment allows user to set this flag through
# environment when required.
BSG_MACHINE_BRANCH_TRACE_EN          ?= 0

CL_MANYCORE_HOST_COORD_X             := 0
CL_MANYCORE_HOST_COORD_Y             := 1
CL_MANYCORE_DIM_X                    := $(BSG_MACHINE_GLOBAL_X)
CL_MANYCORE_DIM_Y                    := $(shell expr $(BSG_MACHINE_GLOBAL_Y) - 1)

CL_MANYCORE_MEM_CFG                  := e_vcache_blocking_test_dramsim3_hbm2_4gb_x128
CL_MANYCORE_DRAM_CHANNELS	     := $(BSG_MACHINE_DRAM_CHANNELS)

# Define BSG_MACHINE_NAME using the Y and X dimensions, and CL_MANYCORE_MEM_CFG
BSG_MACHINE_NAME                      =BSG_Y$(BSG_MACHINE_GLOBAL_Y)X$(BSG_MACHINE_GLOBAL_X)
BSG_MACHINE_NAME                     :=$(BSG_MACHINE_NAME)_$(CL_MANYCORE_MEM_CFG:e_%=%)
